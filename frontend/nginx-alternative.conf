server {
  listen 80;
  sendfile on;
  default_type application/octet-stream;

  # Log para debug
  error_log /var/log/nginx/error.log debug;
  access_log /var/log/nginx/access.log;

  gzip on;
  gzip_http_version 1.1;
  gzip_disable "MSIE [1-6]\.";
  gzip_min_length 256;
  gzip_vary on;
  gzip_proxied expired no-cache no-store private auth;
  gzip_types text/plain text/css application/json application/javascript application/x-javascript text/xml application/xml application/xml+rss text/javascript;
  gzip_comp_level 9;

  root /usr/share/nginx/html;

  # Configuración CORS global
  set $cors_origin "";
  set $cors_methods "GET, POST, PUT, DELETE, OPTIONS";
  set $cors_headers "Origin, X-Requested-With, Content-Type, Accept, Authorization";
  set $cors_credentials "true";

  if ($http_origin = "http://190.13.177.173:8005") {
    set $cors_origin "http://190.13.177.173:8005";
  }

  # 1) Compras → microservicio-de-compras-facturacion:8082  
  location /api/compras {
    if ($request_method = 'OPTIONS') {
      add_header 'Access-Control-Allow-Origin' $cors_origin always;
      add_header 'Access-Control-Allow-Methods' $cors_methods always;
      add_header 'Access-Control-Allow-Headers' $cors_headers always;
      add_header 'Access-Control-Allow-Credentials' $cors_credentials always;
      add_header 'Access-Control-Max-Age' 1728000 always;
      add_header 'Content-Type' 'text/plain; charset=utf-8' always;
      add_header 'Content-Length' 0 always;
      return 204;
    }

    # Reescribir la URL para evitar duplicación
    rewrite ^/api/compras(/.*)$ /api/compras$1 break;
    
    proxy_pass         http://microservicio-de-compras-facturacion:8082;
    proxy_set_header   Host              $host;
    proxy_set_header   X-Real-IP         $remote_addr;
    proxy_set_header   X-Forwarded-For   $proxy_add_x_forwarded_for;
    proxy_set_header   X-Forwarded-Proto $scheme;
    proxy_set_header   X-Forwarded-Host  $server_name;
    proxy_redirect     off;

    # Headers CORS para respuestas
    add_header 'Access-Control-Allow-Origin' $cors_origin always;
    add_header 'Access-Control-Allow-Credentials' $cors_credentials always;
    add_header 'Access-Control-Allow-Methods' $cors_methods always;
    add_header 'Access-Control-Allow-Headers' $cors_headers always;
  }

  # 2) Facturas → mismo microservicio en 8082
  location /api/facturas {
    if ($request_method = 'OPTIONS') {
      add_header 'Access-Control-Allow-Origin' $cors_origin always;
      add_header 'Access-Control-Allow-Methods' $cors_methods always;
      add_header 'Access-Control-Allow-Headers' $cors_headers always;
      add_header 'Access-Control-Allow-Credentials' $cors_credentials always;
      add_header 'Access-Control-Max-Age' 1728000 always;
      add_header 'Content-Type' 'text/plain; charset=utf-8' always;
      add_header 'Content-Length' 0 always;
      return 204;
    }

    # Reescribir la URL para evitar duplicación
    rewrite ^/api/facturas(/.*)$ /api/facturas$1 break;
    
    proxy_pass         http://microservicio-de-compras-facturacion:8082;
    proxy_set_header   Host              $host;
    proxy_set_header   X-Real-IP         $remote_addr;
    proxy_set_header   X-Forwarded-For   $proxy_add_x_forwarded_for;
    proxy_set_header   X-Forwarded-Proto $scheme;
    proxy_set_header   X-Forwarded-Host  $server_name;
    proxy_redirect     off;

    # Headers CORS para respuestas
    add_header 'Access-Control-Allow-Origin' $cors_origin always;
    add_header 'Access-Control-Allow-Credentials' $cors_credentials always;
    add_header 'Access-Control-Allow-Methods' $cors_methods always;
    add_header 'Access-Control-Allow-Headers' $cors_headers always;
  }

  # 3) Guías de Despacho → mismo microservicio en 8082
  location /api/guias-despacho {
    if ($request_method = 'OPTIONS') {
      add_header 'Access-Control-Allow-Origin' $cors_origin always;
      add_header 'Access-Control-Allow-Methods' $cors_methods always;
      add_header 'Access-Control-Allow-Headers' $cors_headers always;
      add_header 'Access-Control-Allow-Credentials' $cors_credentials always;
      add_header 'Access-Control-Max-Age' 1728000 always;
      add_header 'Content-Type' 'text/plain; charset=utf-8' always;
      add_header 'Content-Length' 0 always;
      return 204;
    }

    # Reescribir la URL para evitar duplicación
    rewrite ^/api/guias-despacho(/.*)$ /api/guias-despacho$1 break;
    
    proxy_pass         http://microservicio-de-compras-facturacion:8082;
    proxy_set_header   Host              $host;
    proxy_set_header   X-Real-IP         $remote_addr;
    proxy_set_header   X-Forwarded-For   $proxy_add_x_forwarded_for;
    proxy_set_header   X-Forwarded-Proto $scheme;
    proxy_set_header   X-Forwarded-Host  $server_name;
    proxy_redirect     off;

    # Headers CORS para respuestas
    add_header 'Access-Control-Allow-Origin' $cors_origin always;
    add_header 'Access-Control-Allow-Credentials' $cors_credentials always;
    add_header 'Access-Control-Allow-Methods' $cors_methods always;
    add_header 'Access-Control-Allow-Headers' $cors_headers always;
  }

  # 4) Dashboard → microservicio-dashboard:8085
  location /api/dashboard {
    if ($request_method = 'OPTIONS') {
      add_header 'Access-Control-Allow-Origin' $cors_origin always;
      add_header 'Access-Control-Allow-Methods' $cors_methods always;
      add_header 'Access-Control-Allow-Headers' $cors_headers always;
      add_header 'Access-Control-Allow-Credentials' $cors_credentials always;
      add_header 'Access-Control-Max-Age' 1728000 always;
      add_header 'Content-Type' 'text/plain; charset=utf-8' always;
      add_header 'Content-Length' 0 always;
      return 204;
    }

    # Reescribir la URL para evitar duplicación
    rewrite ^/api/dashboard(/.*)$ /api/dashboard$1 break;
    
    proxy_pass         http://microservicio-dashboard:8085;
    proxy_set_header   Host              $host;
    proxy_set_header   X-Real-IP         $remote_addr;
    proxy_set_header   X-Forwarded-For   $proxy_add_x_forwarded_for;
    proxy_set_header   X-Forwarded-Proto $scheme;
    proxy_set_header   X-Forwarded-Host  $server_name;
    proxy_redirect     off;

    # Headers CORS para respuestas
    add_header 'Access-Control-Allow-Origin' $cors_origin always;
    add_header 'Access-Control-Allow-Credentials' $cors_credentials always;
    add_header 'Access-Control-Allow-Methods' $cors_methods always;
    add_header 'Access-Control-Allow-Headers' $cors_headers always;
  }

  # 5) El resto de /api → gps-backend:8080
  location /api/ {
    if ($request_method = 'OPTIONS') {
      add_header 'Access-Control-Allow-Origin' $cors_origin always;
      add_header 'Access-Control-Allow-Methods' $cors_methods always;
      add_header 'Access-Control-Allow-Headers' $cors_headers always;
      add_header 'Access-Control-Allow-Credentials' $cors_credentials always;
      add_header 'Access-Control-Max-Age' 1728000 always;
      add_header 'Content-Type' 'text/plain; charset=utf-8' always;
      add_header 'Content-Length' 0 always;
      return 204;
    }

    proxy_pass         http://gps-backend:8080/api/;
    proxy_set_header   Host              $host;
    proxy_set_header   X-Real-IP         $remote_addr;
    proxy_set_header   X-Forwarded-For   $proxy_add_x_forwarded_for;
    proxy_set_header   X-Forwarded-Proto $scheme;

    # Headers CORS para respuestas
    add_header 'Access-Control-Allow-Origin' $cors_origin always;
    add_header 'Access-Control-Allow-Credentials' $cors_credentials always;
    add_header 'Access-Control-Allow-Methods' $cors_methods always;
    add_header 'Access-Control-Allow-Headers' $cors_headers always;
  }

  # 6) SPA Angular
  location / {
    try_files $uri $uri/ /index.html =404;
  }
}
