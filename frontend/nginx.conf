server {
  listen 80;
  # 1) Evita que Nginx genere redirects absolutos por directorios
  absolute_redirect off;

  sendfile        on;
  default_type    application/octet-stream;
  gzip on;
  # … tu config de gzip …
  gzip_http_version 1.1;
  gzip_disable "MSIE [1-6]\.";
  gzip_min_length 256;
  gzip_vary on;
  gzip_proxied expired no-cache no-store private auth;
  gzip_types text/plain text/css application/json application/javascript application/x-javascript text/xml application/xml application/xml+rss text/javascript;
  gzip_comp_level 9;

  root /usr/share/nginx/html;

  root /usr/share/nginx/html;

  # 2) Microservicio de Compras & Facturas (mismo upstream en :8082)
  location ~ ^/api/(compras|facturas) {
    proxy_pass         http://microservicio-de-compras-facturacion:8082;
    proxy_http_version 1.1;

    # 3) Pasa al backend el host+puerto original
    proxy_set_header   Host               $http_host;
    proxy_set_header   X-Forwarded-Host   $host;
    proxy_set_header   X-Forwarded-Port   $server_port;
    proxy_set_header   X-Real-IP          $remote_addr;
    proxy_set_header   X-Forwarded-For    $proxy_add_x_forwarded_for;
    proxy_set_header   X-Forwarded-Proto  $scheme;

    # 4) Reescribe cualquier Location absoluto “http://…/api/…” a relativo “/api/…”
    proxy_redirect     ~^https?://[^/]+(:\d+)?(/api/(?:compras|facturas).*)$   $2;

    # 5) CORS preflight
    if ($request_method = OPTIONS) {
      add_header Access-Control-Allow-Origin      $http_origin always;
      add_header Access-Control-Allow-Methods     'GET, POST, PUT, DELETE, OPTIONS' always;
      add_header Access-Control-Allow-Headers     'Origin, X-Requested-With, Content-Type, Accept, Authorization' always;
      add_header Access-Control-Allow-Credentials true always;
      add_header Access-Control-Max-Age           1728000 always;
      return 204;
    }
    # 6) CORS en respuestas normales
    add_header Access-Control-Allow-Origin      $http_origin always;
    add_header Access-Control-Allow-Methods     'GET, POST, PUT, DELETE, OPTIONS' always;
    add_header Access-Control-Allow-Headers     'Origin, X-Requested-With, Content-Type, Accept, Authorization' always;
    add_header Access-Control-Allow-Credentials true always;
    add_header Access-Control-Max-Age           1728000 always;
  }

  # 7) Cualquier otro /api/* (GPS‑backend)
  location ^~ /api {
    proxy_pass         http://gps-backend:8080/api;
    proxy_http_version 1.1;
    proxy_set_header   Host               $http_host;
    proxy_set_header   X-Forwarded-Host   $host;
    proxy_set_header   X-Forwarded-Port   $server_port;
    proxy_set_header   X-Real-IP          $remote_addr;
    proxy_set_header   X-Forwarded-For    $proxy_add_x_forwarded_for;
    proxy_set_header   X-Forwarded-Proto  $scheme;

    proxy_redirect     ~^https?://[^/]+(:\d+)?(/api/.*)$   $2;

    if ($request_method = OPTIONS) {
      add_header Access-Control-Allow-Origin      $http_origin always;
      add_header Access-Control-Allow-Methods     'GET, POST, PUT, DELETE, OPTIONS' always;
      add_header Access-Control-Allow-Headers     'Origin, X-Requested-With, Content-Type, Accept, Authorization' always;
      add_header Access-Control-Allow-Credentials true always;
      add_header Access-Control-Max-Age           1728000 always;
      return 204;
    }
    add_header Access-Control-Allow-Origin      $http_origin always;
    add_header Access-Control-Allow-Methods     'GET, POST, PUT, DELETE, OPTIONS' always;
    add_header Access-Control-Allow-Headers     'Origin, X-Requested-With, Content-Type, Accept, Authorization' always;
    add_header Access-Control-Allow-Credentials true always;
    add_header Access-Control-Max-Age           1728000 always;
  }

  # 8) Tu SPA Angular
  location / {
    try_files $uri $uri/ /index.html;
  }
}
